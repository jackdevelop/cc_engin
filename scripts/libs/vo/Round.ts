import{UserList}from './UserList';var _ = require('Underscore');export class Round{private game_id:number = null;private max_seat:number = 4 public seat_user_codes = [];constructor(game_id:number,opts:any){this.init(game_id,opts)}private init(game_id:number,opts:any){let self = this;this.game_id = game_id;this.merge(opts)}public merge(opts:any){var self = this;_.map(opts,function(v,k){self[k] = v})}public game_room_sitdown(seat_id:number,user_code){this.seat_user_codes[seat_id] = user_code}public game_room_standup(seat_id:number){this.seat_user_codes[seat_id] = 0}public get_room_sitdownIdx(user_code){return _.indexOf(this.seat_user_codes,user_code)}public get_clientIdx_by_sitdownIdx(sitdownIdx){let clientIdx = sitdownIdx let me_user_code = UserList.meUserCode let mypos = this.get_room_sitdownIdx(me_user_code);if(mypos>= 0){let markPos = sitdownIdx - mypos;if(markPos < 0){markPos = markPos+this.max_seat}clientIdx = markPos}else{cc.log("当前我不在座位上！")}return clientIdx}}