import{BaseModel}from '../base/BaseModel';import{NetWork}from '../server/NetWork';import{code_constants}from '../../../../cc_own/constants/code_constants';import{Room_List}from '../vo/Room_List';import{SceneManager}from '../manager/SceneManager';import{UserList}from '../vo/UserList';import{GameEventConstants}from '../../../../cc_own/constants/GameEventConstants';import{GameNotify}from '../utils/GameNotify';import{GameLocalStorageConstants}from '../../../../cc_own/constants/GameLocalStorageConstants';import{game_constants_1300}from '../../../../cc_own/constants/game_constants_1300';import{game_constants}from '../../../../cc_own/constants/game_constants';import{game_constants_2000}from '../../../../cc_own/constants/game_constants_2000';import{moment_util}from '../utils/moment_util';import{game_room_type}from '../../../../cc_own/constants/game_room_type';import{ToolTips}from '../../../tooltips/ToolTips';import LoadingChrysanthemum from '../../../loadingchrysanthemum/LoadingChrysanthemum';import{GameHelp}from '../utils/GameHelp';import{NetWorkHandle}from '../../../../cc_own/tool/NetWorkHandle';import{NativeHelp}from '../utils/NativeHelp';var _ = require('Underscore');export class RoomModel extends BaseModel{private static instance:RoomModel = null;public static getInstance():RoomModel{if(this.instance == null){this.instance = new RoomModel()}return this.instance}public async hall_get_room_ranking(game_id:string,room_category,date,isForce:boolean){if(!isForce && this['ranking'+game_id]){return this['ranking'+game_id]}let cmd = 'hall_get_room_ranking';let param ={cmd:cmd,game_id:game_id,room_category:room_category,date:date,};LoadingChrysanthemum.show();let ret = await NetWork.getInstance().request(cmd,param,null);LoadingChrysanthemum.hide();if(ret && ret.code == code_constants.SUCCESS){let ranking = ret['ranking'+game_id];this['ranking'+game_id] = ranking;return ranking}return null}async _game_get_room_machines(game_id:string,room_category:string,room_code:string,machines:Array){let find = null;for(var i = 0;i < machines.length;i++){let one = machines[i];if(one && one.user){if(one.user.user_code == UserList.meUserCode){find = one;break}}}if(find){LoadingChrysanthemum.show();let new_ret = await this.game_join_room(game_id,room_category,room_code,find.machine_id);LoadingChrysanthemum.hide();return find}return null}public async game_get_room_machines(game_id:string,room_category:number){let cmd = 'game_get_room_machines';let param ={cmd:cmd,game_id:game_id,room_category:room_category,};LoadingChrysanthemum.show();let ret = await NetWork.getInstance().request(cmd,param,null);LoadingChrysanthemum.hide();if(ret && ret.code == code_constants.SUCCESS){let machines = ret.machines;return machines}return null}private hash_room_category = new Object();public async game_get_room_category(game_id:string,isforce:boolean){if(!game_id){return}let one = this.hash_room_category[game_id];if(one &&!isforce){return one}let cmd = 'game_get_room_category';let param ={cmd:cmd,game_id:game_id,};LoadingChrysanthemum.show();let ret = await NetWork.getInstance().request(cmd,param,null);LoadingChrysanthemum.hide();if(ret && ret.code == code_constants.SUCCESS){this.hash_room_category[game_id] = ret;return ret}return null}public async game_room_enter(){let self = this;let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);if(!room){return}if(room.get_room_type() == game_room_type.type.replay){return}let game_id = room.game_id;let room_category = room.room_category;let room_code = room.room_code;let cmd = 'game_room_enter';let param ={cmd:cmd,game_id:game_id,room_category:room_category,room_code:room_code,};LoadingChrysanthemum.show();let ret = await NetWork.getInstance().request(cmd,param,null);LoadingChrysanthemum.hide();if(ret && ret.code == code_constants.SUCCESS){ret.game_id = game_id;this.server_game_room_enter(ret);return ret}return null}server_game_room_enter(ret){let self = this;if(ret && ret.code == code_constants.SUCCESS){let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let game_id = ret.game_id;if(ret.room_config){let config = ret.room_config['config'+game_id];room.config = config}let round = room.init_round(game_id,ret);let score = ret['score'+game_id];room.init_score(score);let users = ret.users;_.each(users,function(user){UserList.setUser(user.user_code,user)});let model = NetWorkHandle.getModel(game_id);model.getInstance().server_game_room_enter(ret);var event ={name:GameEventConstants.game_room_enter,data:{state_game:ret['state'+game_id],},};GameNotify.getInstance().dispatchEvent(event);let state_game = ret['state'+game_id];if(game_id == game_constants.game_id.poker2000 || game_id == game_constants.game_id.mahjong3000){let state = state_game.state;if(state == game_constants_2000.state.waiting){this.server_game_state_change(game_id,ret)}else if(state == game_constants_2000.state.playing || state == game_constants_2000.state.pause){this.server_game_state_change(game_id,ret);this.server_game_init({code:code_constants.SUCCESS,cmd:'server_game_init',banker_user_code:round.banker_user_code,user_cards:round.user_cards,round_id:round.round_id,card_wall:ret.card_wall,laizi_card:ret.laizi_card,pizi_card:ret.pizi_card,is_game_enter:true,},true);let actions = ret['action'+game_id];let model = NetWorkHandle.getModel(game_id);_.each(actions,function(v,k){let is_game_enter_last_action = false;if(actions.length == k+1){is_game_enter_last_action = true}let action_param ={code:code_constants.SUCCESS,cmd:'server_game_user_action',game_id:game_id,['action_'+game_id]:v,is_game_enter:true,is_game_enter_last_action:is_game_enter_last_action,};model .getInstance() .server_game_user_action(game_id,action_param,null)})}else if(state == game_constants_2000.state.ending){this.server_game_state_change(game_id,ret)}else if(state == game_constants_2000.state.disbanding){this.server_game_state_change(game_id,ret)}if(state == game_constants_2000.state.ending){self.server_game_continue({code:code_constants.SUCCESS,cmd:'server_game_continue',game_id:game_id,continue_user_codes:round.continue_user_codes,is_game_enter:true,})}else if(state == game_constants_2000.state.pause){self.server_game_voting({code:code_constants.SUCCESS,cmd:'server_game_voting',agree_user_codes:ret.agree_user_codes,})}}else{this.server_game_state_change(game_id,ret)}return ret}}public server_game_state_change(game_id:number,ret:any){let self = this;if(ret && ret.code == code_constants.SUCCESS){let state_game = ret['state'+game_id];let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();if(round){round.server_game_state_change(state_game);if(state_game){let state = state_game.state;if(game_id == game_constants.game_id.poker2000 || game_id == game_constants.game_id.mahjong3000){if(state == game_constants_2000.state.waiting){round.init_wait()}else if(state == game_constants_2000.state.ending){round.ready_user_codes = []}}else{round.set_banker(state_game.banker_user_code,state_game.banker);round.setAward(state_game);if(state == game_constants_1300.state.on_ready){if(!state_game.banker){round.banker_user_code = null}}if(state_game.award && state_game.award.user){let user = state_game.award.user;_.forEach(user,function(v,k){let one = UserList.getUserByUsercode(v.user_code);if(one){one.bag.setItemByItemid_GOLD(v.after_number)}})}}}var event ={name:GameEventConstants.server_game_state_change,data:{state_game:state_game,},};GameNotify.getInstance().dispatchEvent(event)}}}public async game_room_sitdown(seat_id:number){seat_id = seat_id+1;let cmd = 'game_room_sitdown';let param ={cmd:cmd,seat_id:seat_id,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){ret.seat_id = seat_id;ret.user = UserList.getUserByUsercode(UserList.meUserCode);this.server_game_room_sitdown(ret);return ret}return null}public server_game_room_sitdown(ret:any){if(ret && ret.code == code_constants.SUCCESS){let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();if(round){let seat_id = ret.seat_id - 1;let ret_user = ret.user;let user = UserList.setUser(ret_user.user_code,ret_user);round.game_room_sitdown(seat_id,user.user_code);round.set_game_gun(user.user_code,ret_user.gun);let seat_id_client = round.get_room_sitdown_index_By_client(user.user_code,UserList.meUserCode);var event ={name:GameEventConstants.game_room_sitdown,data:{seat_id:seat_id,seat_id_client:seat_id_client,user:user,},};GameNotify.getInstance().dispatchEvent(event)}}}public async game_room_standup(seat_id:number){seat_id = seat_id+1;let cmd = 'game_room_standup';let param ={cmd:cmd,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();let seat_id = round.get_room_sitdown_index(UserList.meUserCode);ret.seat_id = seat_id;ret.user = UserList.getUserByUsercode(UserList.meUserCode);this.server_game_room_standup(ret);return ret}return null}public server_game_room_standup(ret:any){if(ret && ret.code == code_constants.SUCCESS){let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();if(round){let seat_id = ret.seat_id - 1;let ret_user = ret.user;let user = UserList.getUserByUsercode(ret_user.user_code);let seat_id_client = round.get_room_sitdown_index_By_client(user.user_code,UserList.meUserCode);round.game_room_standup(seat_id);var event ={name:GameEventConstants.game_room_standup,data:{seat_id:seat_id,seat_id_client:seat_id_client,user:user,},};GameNotify.getInstance().dispatchEvent(event)}}}public async game_room_get_banker_list(){let cmd = 'game_room_get_banker_list';let param ={cmd:cmd,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let banker_codes = this.server_game_room_get_banker_list(ret);return banker_codes}return null}public server_game_room_get_banker_list(ret:any){if(ret && ret.code == code_constants.SUCCESS){let banker_codes = ret.banker_codes;let bankers = ret.bankers;_.each(bankers,function(v,k){let user = UserList.setUser(v.user_code,v)});let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();if(round){round.banker_user_code_arr = banker_codes}return banker_codes}return null}public async game_room_on_banker(){let cmd = 'game_room_on_banker';let param ={cmd:cmd,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let banker_codes = this.server_game_room_get_banker_list(ret);return banker_codes}return null}public async game_room_off_banker(){let cmd = 'game_room_off_banker';let param ={cmd:cmd,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let banker_codes = this.server_game_room_get_banker_list(ret);return banker_codes}return null}public async game_create_room(game_id:string,config,room_code){if(!game_id){return}let cmd = 'game_create_room';let param ={cmd:cmd,game_id:game_id,room_code:room_code,gps:NativeHelp.getLocation(),};param['config'+game_id] = config;let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let room_config = ret.room_config;this._game_join_room(ret);return ret}return null}public _game_join_room(ret){let room_config = ret.room_config;let current_scene = SceneManager.getInstance().currScene;let secene_game_id = null;if(current_scene){secene_game_id = current_scene.getGameId()}if(!room_config){Room_List.deleteRoom(Room_List.meRoomCode);if(secene_game_id){SceneManager.getInstance().backToHallOrLobbyScene();return}}else{let num_of_players = ret.num_of_players;room_config.num_of_players = num_of_players;if(Room_List.meRoomCode!= room_config.room_code){Room_List.deleteRoom(Room_List.meRoomCode);Room_List.setRoom(room_config)}Room_List.meRoomCode = room_config.room_code;let game_id = room_config.game_id;if(secene_game_id+''!= game_id+''){let arr = cc.sys.localStorage.getItem(GameLocalStorageConstants.LOCALSTORAGE_LAST_PLAY_GAME) || '[]';arr = JSON.parse(arr);arr.splice(0,0,game_id);arr = _.uniq(arr);cc.sys.localStorage.setItem(GameLocalStorageConstants.LOCALSTORAGE_LAST_PLAY_GAME,JSON.stringify(arr));SceneManager.getInstance().loadScene('Scene'+game_id,true,null,null,null,null,null);return true}}}public async game_join_room(game_id:string,room_category:string,room_code:string,machine_id:number){let cmd = 'game_join_room';let param ={cmd:cmd,game_id:game_id,room_category:room_category,room_code:room_code,machine_id:machine_id,gps:NativeHelp.getLocation(),};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let room_config = ret.room_config;this._game_join_room(ret);return ret}return null}public server_user_join_room(ret){if(ret && ret.code == code_constants.SUCCESS){let user = ret.user;UserList.setUser(user.user_code,user);let num_of_players = ret.num_of_players;let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);room.set_num_of_players(num_of_players);var event ={name:GameEventConstants.server_user_join_room,data:{user:user,},};GameNotify.getInstance().dispatchEvent(event)}}public server_user_quit_room(ret){if(ret && ret.code == code_constants.SUCCESS){let ret_user = ret.user;let user = UserList.setUser(ret_user.user_code,ret_user);let num_of_players = ret.num_of_players;let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);room.set_num_of_players(num_of_players);let seat_id = room.game_quit_room(user.user_code);let round = room.get_round();if(round){round.set_game_gun(user.user_code,null)}var event ={name:GameEventConstants.server_user_quit_room,data:{seat_id:seat_id,user:user,},};GameNotify.getInstance().dispatchEvent(event)}}public async game_quit_room(){let cmd = 'game_quit_room';let param ={cmd:cmd,};let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);if(!room){return true}let room_type = room.get_room_type();let ret = null;if(room_type == game_room_type.type.replay){ret ={code:code_constants.SUCCESS,}}else{ret = await NetWork.getInstance().request(cmd,param,null)}if(ret && ret.code == code_constants.SUCCESS){this._game_quit_room();return true}return null}_game_quit_room(){let room = Room_List.deleteRoom(Room_List.meRoomCode);Room_List.meRoomCode = null}public async server_game_over(game_id,ret){if(ret && ret.code == code_constants.SUCCESS){let round_id = ret.round_id;let is_over = ret.is_over;let score = ret['score'+game_id];let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);room.init_score(score);let creator_user_code = room.config.creator_user_code;var event ={name:GameEventConstants.server_game_over,data:{is_over:is_over,round_id:round_id,score:score,creator_user_code:creator_user_code,},};GameNotify.getInstance().dispatchEvent(event);}}public async game_get_room_info(){let cmd = 'game_get_room_info';let param ={cmd:cmd,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let room_state = ret.room_state;return room_state}return null}public async game_is_in_room(){let cmd = 'game_is_in_room';let param ={cmd:cmd,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){let result = this._game_join_room(ret);return result}return null}public async game_ready(is_ready){let cmd = 'game_ready';let param ={cmd:cmd,is_ready:is_ready,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){ret.user_code = UserList.meUserCode;this.server_game_ready(ret);return ret}return null}public async server_game_ready(ret){let self = this;if(ret && ret.code == code_constants.SUCCESS){let user_code = ret.user_code;let is_ready = ret.is_ready;let ready_user_codes = ret.ready_user_codes;let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();round.ready_user_codes = ready_user_codes;var event ={name:GameEventConstants.server_game_ready,data:{user_code:user_code,is_ready:is_ready,ready_user_codes:ready_user_codes,},};GameNotify.getInstance().dispatchEvent(event)}}public async game_continue(){let cmd = 'game_continue';let param ={cmd:cmd,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){ret.user_code = UserList.meUserCode;this.server_game_continue(ret);return ret}return null}public async server_game_continue(ret){let self = this;if(ret && ret.code == code_constants.SUCCESS){let user_code = ret.user_code;let continue_user_codes = ret.continue_user_codes;let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();round.continue_user_codes = continue_user_codes;var event ={name:GameEventConstants.server_game_continue,data:{user_code:user_code,continue_user_codes:continue_user_codes,is_game_enter:ret.is_game_enter,},};GameNotify.getInstance().dispatchEvent(event)}}public async server_game_init(ret,not_animation){if(ret && ret.code == code_constants.SUCCESS){let banker_user_code = ret.banker_user_code;let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();if(round){let user_cards = ret.user_cards;round.user_cards = user_cards;round.pizi_card = ret.pizi_card;round.laizi_card = ret.laizi_card;round.card_wall = ret.card_wall;round.first_card = ret.first_card;round.user_cards_show = new Object();round.set_turn_user_code(banker_user_code);round.set_banker_user_code(ret.banker_user_code)}var event ={name:GameEventConstants.server_game_init,data:{banker_user_code:ret.banker_user_code,action_uid:ret.action_uid,action_ts:ret.action_ts,not_animation:not_animation,card_wall:ret.card_wall,is_game_enter:ret.is_game_enter,},};GameNotify.getInstance().dispatchEvent(event)}}public async game_voting(agree){let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let room_type = room.get_room_type();if(room_type == game_room_type.type.replay){ToolTips.show('回放中，不能使用');return}let cmd = 'game_voting';let param ={cmd:cmd,agree:agree,};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){this.server_game_voting(ret);return ret}return null}public server_game_voting(ret){let self = this;if(ret && ret.code == code_constants.SUCCESS){let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let round = room.get_round();let seat_user_codes = round.seat_user_codes;let user_code = ret.user_code;let agree = ret.agree;let agree_user_codes = ret.agree_user_codes;let apply_ts = ret.apply_ts || moment_util.get_server_time();var event ={name:GameEventConstants.sever_game_voting,data:{user_code:user_code,agree:agree,agree_user_codes:agree_user_codes,apply_ts:apply_ts,seat_user_codes:seat_user_codes,},};GameNotify.getInstance().dispatchEvent(event)}}public async game_chat(chat_type:number,chat_text:string){let room = Room_List.getRoomByRoomcode(Room_List.meRoomCode);let room_type = room.get_room_type();if(room_type == game_room_type.type.replay){ToolTips.show('回放中，不能使用');return}let cmd = 'game_chat';let param ={cmd:cmd,msg:{chat_type:chat_type,chat_text:chat_text,},};let ret = await NetWork.getInstance().request(cmd,param,null);if(ret && ret.code == code_constants.SUCCESS){ret.user_code = UserList.meUserCode;this.server_game_chat(ret);return ret}return null}public async server_game_chat(ret){if(ret && ret.code == code_constants.SUCCESS){let user_code = ret.user_code;let msg = ret.msg;var event ={name:GameEventConstants.game_chat,data:{user_code:user_code,msg:msg,},};GameNotify.getInstance().dispatchEvent(event)}}}